// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils / cssSnapshots with a Bootstrap import should find external files 1`] = `undefined`;

exports[`utils / cssSnapshots with a custom renderer should process a file and log 1`] = `
[
  "exampleFileContents",
  "exampleFileName",
]
`;

exports[`utils / cssSnapshots with allowAdditionalClasses enabled should return a dts file that allows any string value 1`] = `
"declare let classes: {
  'appLogo': string;
  'appLogo': string;
  'childClass': string;
  'classWithMixin': string;
  'const': string;
  'default': string;
  'globalClass': string;
  'localClass': string;
  'localClassInsideGlobal': string;
  'localClassInsideLocal': string;
  'nestedClassParent': string;
  'nestedClassParentExtended': string;
  'reservedWords': string;
  'section1': string;
  'section2': string;
  'section3': string;
  'section4': string;
  'section5': string;
  'section6': string;
  'section7': string;
  'section8': string;
  'section9': string;
  [key: string]: string;
};
export default classes;
export let appLogo: string;
export let appLogo: string;
export let childClass: string;
export let classWithMixin: string;
export let globalClass: string;
export let localClass: string;
export let localClassInsideGlobal: string;
export let localClassInsideLocal: string;
export let nestedClassParent: string;
export let nestedClassParentExtended: string;
export let reservedWords: string;
export let section1: string;
export let section2: string;
export let section3: string;
export let section4: string;
export let section5: string;
export let section6: string;
export let section7: string;
export let section8: string;
export let section9: string;
"
`;

exports[`utils / cssSnapshots with baseUrl and paths in compilerOptions sass should find the files 1`] = `
[
  "big-font",
  "class-with-mixin",
  "public-module",
]
`;

exports[`utils / cssSnapshots with file 'empty.module.less' createExports should create an exports file 1`] = `
"declare let classes: {
  
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'empty.module.less' getCssExports should return an object matching expected CSS 1`] = `[]`;

exports[`utils / cssSnapshots with file 'empty.module.less' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '';"
`;

exports[`utils / cssSnapshots with file 'empty.module.sass' createExports should create an exports file 1`] = `
"declare let classes: {
  
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'empty.module.sass' getCssExports should return an object matching expected CSS 1`] = `[]`;

exports[`utils / cssSnapshots with file 'empty.module.sass' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '';"
`;

exports[`utils / cssSnapshots with file 'empty.module.scss' createExports should create an exports file 1`] = `
"declare let classes: {
  
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'empty.module.scss' getCssExports should return an object matching expected CSS 1`] = `[]`;

exports[`utils / cssSnapshots with file 'empty.module.scss' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '';"
`;

exports[`utils / cssSnapshots with file 'empty.module.styl' createExports should create an exports file 1`] = `
"declare let classes: {
  
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'empty.module.styl' getCssExports should return an object matching expected CSS 1`] = `[]`;

exports[`utils / cssSnapshots with file 'empty.module.styl' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '';"
`;

exports[`utils / cssSnapshots with file 'import.module.css' createExports should create an exports file 1`] = `
"declare let classes: {
  'ClassB': string;
  'childA': string;
  'childB': string;
  'class-c': string;
  'classA': string;
  'classB': string;
  'class_d': string;
  'nestedChild': string;
  'parent': string;
};
export default classes;
export let ClassB: string;
export let childA: string;
export let childB: string;
export let classA: string;
export let classB: string;
export let class_d: string;
export let nestedChild: string;
export let parent: string;
"
`;

exports[`utils / cssSnapshots with file 'import.module.css' getCssExports should return an object matching expected CSS 1`] = `
[
  "ClassB",
  "childA",
  "childB",
  "class-c",
  "classA",
  "classB",
  "class_d",
  "nestedChild",
  "parent",
]
`;

exports[`utils / cssSnapshots with file 'import.module.css' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'ClassB': string;
  'childA': string;
  'childB': string;
  'class-c': string;
  'classA': string;
  'classB': string;
  'class_d': string;
  'nestedChild': string;
  'parent': string;
};
export default classes;
export let ClassB: string;
export let childA: string;
export let childB: string;
export let classA: string;
export let classB: string;
export let class_d: string;
export let nestedChild: string;
export let parent: string;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8';"
`;

exports[`utils / cssSnapshots with file 'import.module.less' createExports should create an exports file 1`] = `
"declare let classes: {
  'child-class': string;
  'color-set': string;
  'column-1': string;
  'column-2': string;
  'column-3': string;
  'column-4': string;
  'nested-class-parent': string;
  'selector-blue': string;
  'selector-green': string;
  'selector-red': string;
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'import.module.less' getCssExports should return an object matching expected CSS 1`] = `
[
  "child-class",
  "color-set",
  "column-1",
  "column-2",
  "column-3",
  "column-4",
  "nested-class-parent",
  "selector-blue",
  "selector-green",
  "selector-red",
]
`;

exports[`utils / cssSnapshots with file 'import.module.less' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'child-class': string;
  'color-set': string;
  'column-1': string;
  'column-2': string;
  'column-3': string;
  'column-4': string;
  'nested-class-parent': string;
  'selector-blue': string;
  'selector-green': string;
  'selector-red': string;
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';"
`;

exports[`utils / cssSnapshots with file 'import.module.styl' createExports should create an exports file 1`] = `
"declare let classes: {
  'foo': string;
};
export default classes;
export let foo: string;
"
`;

exports[`utils / cssSnapshots with file 'import.module.styl' getCssExports should return an object matching expected CSS 1`] = `
[
  "foo",
]
`;

exports[`utils / cssSnapshots with file 'import.module.styl' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'foo': string;
};
export default classes;
export let foo: string;

export const __cssModule: true;
export type AllClassNames = '0';"
`;

exports[`utils / cssSnapshots with file 'test.module.css' createExports should create an exports file 1`] = `
"declare let classes: {
  'ClassB': string;
  'childA': string;
  'childB': string;
  'class-c': string;
  'classA': string;
  'classB': string;
  'class_d': string;
  'nestedChild': string;
  'parent': string;
};
export default classes;
export let ClassB: string;
export let childA: string;
export let childB: string;
export let classA: string;
export let classB: string;
export let class_d: string;
export let nestedChild: string;
export let parent: string;
"
`;

exports[`utils / cssSnapshots with file 'test.module.css' getCssExports should return an object matching expected CSS 1`] = `
[
  "ClassB",
  "childA",
  "childB",
  "class-c",
  "classA",
  "classB",
  "class_d",
  "nestedChild",
  "parent",
]
`;

exports[`utils / cssSnapshots with file 'test.module.css' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'ClassB': string;
  'childA': string;
  'childB': string;
  'class-c': string;
  'classA': string;
  'classB': string;
  'class_d': string;
  'nestedChild': string;
  'parent': string;
};
export default classes;
export let ClassB: string;
export let childA: string;
export let childB: string;
export let classA: string;
export let classB: string;
export let class_d: string;
export let nestedChild: string;
export let parent: string;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8';"
`;

exports[`utils / cssSnapshots with file 'test.module.less' createExports should create an exports file 1`] = `
"declare let classes: {
  'child-class': string;
  'color-set': string;
  'column-1': string;
  'column-2': string;
  'column-3': string;
  'column-4': string;
  'nested-class-parent': string;
  'selector-blue': string;
  'selector-green': string;
  'selector-red': string;
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'test.module.less' getCssExports should return an object matching expected CSS 1`] = `
[
  "child-class",
  "color-set",
  "column-1",
  "column-2",
  "column-3",
  "column-4",
  "nested-class-parent",
  "selector-blue",
  "selector-green",
  "selector-red",
]
`;

exports[`utils / cssSnapshots with file 'test.module.less' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'child-class': string;
  'color-set': string;
  'column-1': string;
  'column-2': string;
  'column-3': string;
  'column-4': string;
  'nested-class-parent': string;
  'selector-blue': string;
  'selector-green': string;
  'selector-red': string;
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';"
`;

exports[`utils / cssSnapshots with file 'test.module.sass' createExports should create an exports file 1`] = `
"declare let classes: {
  'child-class': string;
  'class-with-mixin': string;
  'const': string;
  'default': string;
  'global-class': string;
  'local-class': string;
  'local-class-inside-global': string;
  'local-class-inside-local': string;
  'nested-class-parent': string;
  'nested-class-parent--extended': string;
  'reserved-words': string;
  'section-1': string;
  'section-2': string;
  'section-3': string;
  'section-4': string;
  'section-5': string;
  'section-6': string;
  'section-7': string;
  'section-8': string;
  'section-9': string;
};
export default classes;
"
`;

exports[`utils / cssSnapshots with file 'test.module.sass' getCssExports should return an object matching expected CSS 1`] = `
[
  "child-class",
  "class-with-mixin",
  "const",
  "default",
  "global-class",
  "local-class",
  "local-class-inside-global",
  "local-class-inside-local",
  "nested-class-parent",
  "nested-class-parent--extended",
  "reserved-words",
  "section-1",
  "section-2",
  "section-3",
  "section-4",
  "section-5",
  "section-6",
  "section-7",
  "section-8",
  "section-9",
]
`;

exports[`utils / cssSnapshots with file 'test.module.sass' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'child-class': string;
  'class-with-mixin': string;
  'const': string;
  'default': string;
  'global-class': string;
  'local-class': string;
  'local-class-inside-global': string;
  'local-class-inside-local': string;
  'nested-class-parent': string;
  'nested-class-parent--extended': string;
  'reserved-words': string;
  'section-1': string;
  'section-2': string;
  'section-3': string;
  'section-4': string;
  'section-5': string;
  'section-6': string;
  'section-7': string;
  'section-8': string;
  'section-9': string;
};
export default classes;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19';"
`;

exports[`utils / cssSnapshots with file 'test.module.scss' createExports should create an exports file 1`] = `
"declare let classes: {
  'App-logo': string;
  'App_logo': string;
  'child-class': string;
  'class-with-mixin': string;
  'const': string;
  'default': string;
  'global-class': string;
  'local-class': string;
  'local-class-inside-global': string;
  'local-class-inside-local': string;
  'nested-class-parent': string;
  'nested-class-parent--extended': string;
  'reserved-words': string;
  'section-1': string;
  'section-2': string;
  'section-3': string;
  'section-4': string;
  'section-5': string;
  'section-6': string;
  'section-7': string;
  'section-8': string;
  'section-9': string;
};
export default classes;
export let App_logo: string;
"
`;

exports[`utils / cssSnapshots with file 'test.module.scss' getCssExports should return an object matching expected CSS 1`] = `
[
  "App-logo",
  "App_logo",
  "child-class",
  "class-with-mixin",
  "const",
  "default",
  "global-class",
  "local-class",
  "local-class-inside-global",
  "local-class-inside-local",
  "nested-class-parent",
  "nested-class-parent--extended",
  "reserved-words",
  "section-1",
  "section-2",
  "section-3",
  "section-4",
  "section-5",
  "section-6",
  "section-7",
  "section-8",
  "section-9",
]
`;

exports[`utils / cssSnapshots with file 'test.module.scss' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'App-logo': string;
  'App_logo': string;
  'child-class': string;
  'class-with-mixin': string;
  'const': string;
  'default': string;
  'global-class': string;
  'local-class': string;
  'local-class-inside-global': string;
  'local-class-inside-local': string;
  'nested-class-parent': string;
  'nested-class-parent--extended': string;
  'reserved-words': string;
  'section-1': string;
  'section-2': string;
  'section-3': string;
  'section-4': string;
  'section-5': string;
  'section-6': string;
  'section-7': string;
  'section-8': string;
  'section-9': string;
};
export default classes;
export let App_logo: string;

export const __cssModule: true;
export type AllClassNames = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '20' | '21';"
`;

exports[`utils / cssSnapshots with file 'test.module.styl' createExports should create an exports file 1`] = `
"declare let classes: {
  'foo': string;
};
export default classes;
export let foo: string;
"
`;

exports[`utils / cssSnapshots with file 'test.module.styl' getCssExports should return an object matching expected CSS 1`] = `
[
  "foo",
]
`;

exports[`utils / cssSnapshots with file 'test.module.styl' with a custom template should transform the generated dts 1`] = `
"/* eslint-disable */
declare let classes: {
  'foo': string;
};
export default classes;
export let foo: string;

export const __cssModule: true;
export type AllClassNames = '0';"
`;

exports[`utils / cssSnapshots with goToDefinition enabled should return a line-accurate dts file 1`] = `
"export let globalClass: string;




export let localClass: string;export let localClassInsideGlobal: string;









export let localClassInsideLocal: string;





export let reservedWords: string;








export let childClass: string;export let nestedClassParent: string;


export let nestedClassParentExtended: string;







export let section1: string;export let section2: string;export let section3: string;export let section4: string;export let section5: string;export let section6: string;export let section7: string;export let section8: string;export let section9: string;






export let classWithMixin: string;



export let appLogo: string;





export let appLogo: string;






























"
`;

exports[`utils / cssSnapshots with goToDefinition enabled should return an object with classes, css, and a source map 1`] = `
{
  "classes": [
    "App-logo",
    "App_logo",
    "child-class",
    "class-with-mixin",
    "const",
    "default",
    "global-class",
    "local-class",
    "local-class-inside-global",
    "local-class-inside-local",
    "nested-class-parent",
    "nested-class-parent--extended",
    "reserved-words",
    "section-1",
    "section-2",
    "section-3",
    "section-4",
    "section-5",
    "section-6",
    "section-7",
    "section-8",
    "section-9",
  ],
  "css": "

:global .global-class {
  color: rebeccapurple;
}

:global(.global-class-2) .local-class-inside-global {
  color: rebeccapurple;
}

:local .local-class {
  color: rebeccapurple;
}

:local(.local-class-2) .local-class-inside-local {
  color: rebeccapurple;
}

.reserved-words .default {
  color: rebeccapurple;
}

.reserved-words .const {
  color: rebeccapurple;
}

.nested-class-parent .child-class {
  color: rebeccapurple;
}

.nested-class-parent--extended {
  color: rebeccapurple;
}

.section-1 {
  color: rebeccapurple;
}

.section-2 {
  color: rebeccapurple;
}

.section-3 {
  color: rebeccapurple;
}

.section-4 {
  color: rebeccapurple;
}

.section-5 {
  color: rebeccapurple;
}

.section-6 {
  color: rebeccapurple;
}

.section-7 {
  color: rebeccapurple;
}

.section-8 {
  color: rebeccapurple;
}

.section-9 {
  color: rebeccapurple;
}

.class-with-mixin {
  margin: 0;
}

.App_logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: my-animation infinite 20s linear;
  }
}

/*
.commented-parent-class {
  .commented-child-class
}
*/",
  "sourceMap": {
    "file": "src/helpers/__tests__/fixtures/test.module.scss",
    "mappings": ";;AAAA;EACE,oBAAA;ACCF;;ADGE;EACE,oBAAA;ACAJ;;ADIA;EACE,oBAAA;ACDF;;ADKE;EACE,oBAAA;ACFJ;;ADOE;EACE,oBAAA;ACJJ;;ADME;EACE,oBAAA;ACJJ;;ADSE;EACE,oBAAA;ACNJ;;ADQE;EACE,oBAAA;ACNJ;;ADaE;EACE,oBAJI;ACNR;;ADSE;EACE,oBAJI;ACFR;;ADKE;EACE,oBAJI;ACER;;ADCE;EACE,oBAJI;ACMR;;ADHE;EACE,oBAJI;ACUR;;ADPE;EACE,oBAJI;ACcR;;ADXE;EACE,oBAJI;ACkBR;;ADfE;EACE,oBAJI;ACsBR;;ADnBE;EACE,oBAJI;AC0BR;;ADhBA;EE/CE,SFgDoB;ACmBtB;;ADhBA;EACE,cAAA;EACA,oBAAA;ACmBF;;ADhBA;EACE;IACE,2CAAA;ECmBF;AACF;;ADZA;;;;CAAA",
    "names": [],
    "sources": [
      "file://[cwd]/src/helpers/__tests__/fixtures/test.module.scss",
      "src/helpers/__tests__/fixtures/test.module.scss",
      "file://[cwd]/src/helpers/__tests__/fixtures/_mixin.scss",
    ],
    "version": 3,
  },
}
`;

<<<<<<< Updated upstream
exports[`utils / cssSnapshots with loadPaths in sass options should find external file from loadPaths 1`] = `
{
  "big-font": "include-path-module__big-font---Td7hY",
  "class-with-mixin": "include-path-module__class-with-mixin---1u87_",
}
`;

exports[`utils / cssSnapshots with loadPaths in stylus options should find external file from loadPaths 1`] = `
{
  "external-class": "include-path-module__external-class---ecH0A",
  "include-path": "include-path-module__include-path---2f2uR",
}
=======
exports[`utils / cssSnapshots with includePaths in sass options should find external file from includePaths 1`] = `
[
  "big-font",
  "class-with-mixin",
]
`;

exports[`utils / cssSnapshots with includePaths in stylus options should find external file from includePaths 1`] = `
[
  "external-class",
  "include-path",
]
>>>>>>> Stashed changes
`;

exports[`utils / cssSnapshots with noUncheckedIndexedAccess enabled should return a dts file with only possibly undefined strings 1`] = `
"declare let classes: {
  'appLogo'?: string;
  'appLogo'?: string;
  'childClass'?: string;
  'classWithMixin'?: string;
  'const'?: string;
  'default'?: string;
  'globalClass'?: string;
  'localClass'?: string;
  'localClassInsideGlobal'?: string;
  'localClassInsideLocal'?: string;
  'nestedClassParent'?: string;
  'nestedClassParentExtended'?: string;
  'reservedWords'?: string;
  'section1'?: string;
  'section2'?: string;
  'section3'?: string;
  'section4'?: string;
  'section5'?: string;
  'section6'?: string;
  'section7'?: string;
  'section8'?: string;
  'section9'?: string;
};
export default classes;
export let appLogo?: string;
export let appLogo?: string;
export let childClass?: string;
export let classWithMixin?: string;
export let globalClass?: string;
export let localClass?: string;
export let localClassInsideGlobal?: string;
export let localClassInsideLocal?: string;
export let nestedClassParent?: string;
export let nestedClassParentExtended?: string;
export let reservedWords?: string;
export let section1?: string;
export let section2?: string;
export let section3?: string;
export let section4?: string;
export let section5?: string;
export let section6?: string;
export let section7?: string;
export let section8?: string;
export let section9?: string;
"
`;
